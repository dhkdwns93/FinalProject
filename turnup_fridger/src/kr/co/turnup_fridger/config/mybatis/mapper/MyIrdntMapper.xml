<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="MyIrdnt">

	<sql id="all-column">
		my_irdnt_key,
		start_date,
		end_date,
		fresh_level,
		irdnt_count,
		irdnt_id,
		irdnt_name,
		fridger_id,
		start_fresh_level,
		storge_place
	</sql>
	
	<resultMap type="MyIrdnt" id="MyIrdnt-resultmap">
		<id column ="my_irdnt_key" property ="myIrdntKey"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="fresh_level" property="freshLevel"/>
		<result column="irdnt_count" property="irdntCount"/>
		<result column="irdnt_id" property="irdntId"/>
		<result column="irdnt_name" property="irdntName"/>
		<result column="fridger_id" property="fridgerId"/>
		<result column="start_fresh_level" property="startFreshLevel"/>
		<result column="storge_place" property="storgePlace"/>
	</resultMap>
	
	<insert id="insertMyIrdnt" parameterType="MyIrdnt">
		<selectKey resultType="_int" keyProperty="myIrdntKey" order="BEFORE">
			SELECT MY_IRDNT_KEY.nextval FROM dual
		</selectKey>
		insert into My_Irdnt 
		values (#{myIrdntKey},
				#{startDate},
				#{endDate},
				#{freshLevel},
				#{irdntCount},
				#{irdntId},
				#{irdntName},
				#{fridgerId},
				#{startFreshLevel},
				#{storgePlace})
	</insert>
	
	<update id="updateMyIrdnt" parameterType="MyIrdnt">
		update My_Irdnt
		set my_irdnt_key=#{myIrdntKey},
			start_date=#{startDate},
			end_date=#{endDate},
			fresh_level=#{freshLevel},
			irdnt_count=#{irdntCount},
			irdnt_id=#{irdntId},
			irdnt_name=#{irdntName},
			fridger_id=#{fridgerId},
			start_fresh_level=#{startFreshLevel},
			storge_place=#{storgePlace}
		where my_irdnt_key=#{myIrdntKey}
	</update>
	
	<delete id="deleteMyIrdnt" parameterType="_int">
		delete from My_Irdnt
		where my_irdnt_key=#{value}
	</delete>
	
	<select id="selectAllInfoMyIrdnt" resultMap="MyIrdnt-resultmap">
		SELECT
		<include refid="all-column" />
		FROM My_Irdnt
		ORDER BY my_irdnt_key
	</select>
	
	<select id="selectMyIrdntByKey" resultMap="MyIrdnt-resultmap" parameterType="_int">
		SELECT
		<include refid="all-column" />
		FROM My_Irdnt
		where my_irdnt_key=#{value}
	</select>
	
	<select id="selectMyIrdntByName" resultMap="MyIrdnt-resultmap" parameterType="java.util.HashMap">
		SELECT
		<include refid="all-column" />
		FROM My_Irdnt
		where irdnt_name like '%'||#{irdntName}||'%' and fridger_id=#{fridgerId}
		ORDER BY my_irdnt_key
	</select>
	
	<select id="selectMyStaleIrdnt" resultMap="MyIrdnt-resultmap" parameterType="java.util.HashMap">
		SELECT
		<include refid="all-column" />
		FROM My_Irdnt
		where fresh_level = #{freshLevel} and fridger_id=#{fridgerId}
		ORDER BY my_irdnt_key
	</select>
	
	<select id="selectSoonExpireMyIrdnt" resultMap="MyIrdnt-resultmap" parameterType="java.util.HashMap">
		SELECT
		<include refid="all-column" />
		FROM My_Irdnt
		where end_date = #{endDate} and fridger_id=#{fridgerId}
		ORDER BY my_irdnt_key
	</select>
	
	<select id="selectMyIrdntByStartDate" resultMap="MyIrdnt-resultmap" parameterType="java.util.HashMap">
		SELECT
		<include refid="all-column" />
		FROM My_Irdnt
		where start_date = #{StartDate} and fridger_id=#{fridgerId}
		ORDER BY my_irdnt_key
	</select>
	
	<select id="selectCountAllMyIrdnts" resultType="_int">
		SELECT count(*)
		FROM My_Irdnt
		where fridger_id=#{fridgerId}
		ORDER BY my_irdnt_key
	</select>
	
	<select id="selectMyIrdntByFridgerId" resultMap="MyIrdnt-resultmap" parameterType="_int">
		SELECT 
		<include refid="all-column"/>
		FROM My_Irdnt
		where fridger_id=#{fridgerId}
		ORDER BY my_irdnt_key
	</select>
	
	<!--추가, 신선도와 재료명으로 동시검색.  -->
	<select id="selectMyIrdntByFreshLevelAndIrdntName" resultMap="MyIrdnt-resultmap" parameterType="java.util.HashMap">
		SELECT 
		<include refid="all-column"/>
		FROM My_Irdnt
		where fridger_id=#{fridgerId}
		<choose>
			<when test="freshLevel == '전체'">
				and irdnt_name like '%'||#{irdntName}||'%' ORDER BY my_irdnt_key
			</when>
			<otherwise>
				and irdnt_name like '%'||#{irdntName}||'%' and fresh_level=#{freshLevel}
				ORDER BY my_irdnt_key
			</otherwise>
		</choose>
	</select>
	
	<select id="selectMyIrdntBymemberId" resultMap="MyIrdnt-resultmap" parameterType="java.lang.String">
		select 
		<include refid="all-column"/>
		from my_irdnt
		where member_id=#{value}
	</select>
	
	<!--7/14추가 레시피의 재료들과 일치하는 나의 식재료들을 골라내는 쿼리.  -->
	<select id="selectMatchIrdnt" resultMap="MyIrdnt-resultmap" parameterType="java.util.HashMap">
		select 
				my_irdnt_key,
				start_date,
				end_date,
				fresh_level,
				irdnt_count,
				irdnt_id,
				irdnt_name,
				fridger_id,
				start_fresh_level,
				storge_place
		from (
			select 	my_irdnt_key,
					start_date,
					end_date,
					fresh_level,
					irdnt_count,
					irdnt_id,
					irdnt_name,
					fridger_id,
					start_fresh_level,
					storge_place 
			from my_irdnt 
			where fridger_id in (
					select fridger_id 
					from fridger 
					where member_id=#{memberId}))
		where irdnt_id in (
			select irdnt_id 
			from recipe_irdnt 
			where recipe_id=#{recipe_id})			
	</select>
	
	<!--7/14일 추가 나의식재료들 카운트 쿼리  -->
	<select id="selectMyIrdntByStorgePlace" parameterType="java.util.HashMap" resultType="_int">
		select count(*) from My_irdnt
		where fridger_id = #{fridgerId} and storge_place=#{storgePlace}
	</select>
	
	<select id="selectMyIrdntByCategory" parameterType="java.util.HashMap" resultType="_int">
		select count(*) 
		from My_irdnt m, irdnt_manage i
		where m.irdnt_id = i.irdnt_id and m.fridger_id =#{fridgerId} and i.irdnt_category=#{category}
	</select>
	
	<select id="selectMyIrdntByFreshLevel" parameterType="java.util.HashMap" resultType="_int">
		select count(*) 
		from My_irdnt
		where fridger_id = #{fridgerId} and fresh_level=#{freshLevel}
	</select>
	
</mapper>