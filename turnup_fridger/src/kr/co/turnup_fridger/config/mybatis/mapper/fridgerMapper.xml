<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fridgerMapper">

<!-- 공동 select sql -->
<sql id="select-sql">
	SELECT	fridger_id,
			fridger_name,
			member_id,
			fridger_img
	FROM	fridger
</sql>

<sql id="select-join-myIrdnt-sql">
	SELECT	f.fridger_id,
			f.fridger_name,
			f.member_id,
			f.fridger_img,
			i.my_irdnt_key,
			i.start_date,
			i.end_date,
			i.fresh_level,
			i.irdnt_count,
			i.irdnt_id,
			i.irdnt_name,
			i.fridger_id,
			i.start_fresh_level,
			i.storge_place
	FROM	fridger f, my_Irdnt i
	WHERE	f.fridger_id = i.fridger_id(+)
</sql>


<sql id="select-join-fridgerGroup-sql">
	SELECT	f.fridger_id,
			f.fridger_name,
			f.member_id,
			f.fridger_img,
			g.group_key,
			g.group_join_seq,
			g.group_member_id
	FROM	fridger f, fridger_group g
	WHERE	f.fridger_id = g.fridger_id(+)
</sql>


<sql id="all-column">
	fridger_id,
	fridger_name,
	member_id,
	fridger_img
</sql>

<!-- result-mapping -->
<resultMap type="fridger" id="fridger-resultmap">
	<id column="fridger_id" property="fridgerId"/>
	<result column="fridger_name" property="fridgerName"/>
	<result column="member_id" property="memberId"/>
	<result column="fridger_img" property="fridgerImg"/>
</resultMap>


<resultMap type="fridger" id="fridger-fridgerGroup-resultmap" extends="fridger-resultmap">
	<collection property="fridgerGroupList" ofType="fridgerGroup">
	  <id column="group_key" property="groupKey"/>
      <result column="group_join_seq" property="groupJoinSeq"/>
      <result column="group_member_id" property="groupMemberId"/>
	</collection>
</resultMap>

<resultMap type="fridger" id="fridger-myIrdnt-resultmap" extends="fridger-resultmap">
	<collection property="myIrdntList" ofType="myIrdnt">
		<id column ="my_irdnt_key" property ="myIrdntKey"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="fresh_level" property="freshLevel"/>
		<result column="irdnt_count" property="irdntCount"/>
		<result column="irdnt_id" property="irdntId"/>
		<result column="irdnt_name" property="irdntName"/>
		<result column="start_fresh_level" property="startFreshLevel"/>
		<result column="storge_place" property="storgePlace"/>
	</collection>
</resultMap>



<!-- sql : insert 냉장고 생성하기 ()-->
<!-- insert / update / delete -->

<insert id="insertFridger" parameterType="fridger">
	<selectKey order="BEFORE" keyProperty="fridgerId" resultType="int">
			SELECT	fridger_ID.nextval FROM	dual
	</selectKey>
	INSERT INTO	FRIDGER
	VALUES(
		#{fridgerId},
		#{fridgerName},
		#{memberId},
		#{fridgerImg}
	)
</insert>


<update id="updateFridger" parameterType="fridger">
UPDATE	fridger
SET		fridger_name = #{fridgerName},
		fridger_img = #{fridgerImg},
		member_id = #{memberId}
WHERE	fridger_id = #{fridgerId}
</update>

<delete id="deleteFridger" parameterType="_int">
DELETE FROM	fridger
WHERE		fridger_id = #{value}
</delete>


<!-- select -->
<!-- 전체 조회 -->
<select id="selectFridgerAll" resultMap="fridger-resultmap">
	<include refid="select-sql"/>
	ORDER BY fridger_id
</select>
<!-- 냉장고 번호로 찾기 -->
<select id="selectFridgerByFridgerId" parameterType="_int" resultMap="fridger-resultmap">
	<include refid="select-sql"/>
WHERE fridger_id = #{value}
</select>

<select id="selectFridgerAndIrdntByFridgerId" parameterType="_int" resultMap="fridger-myIrdnt-resultmap">
	<include refid="select-join-myIrdnt-sql"/>
AND		f.fridger_id = #{value}
ORDER BY	i.irdnt_name
</select>

<select id="selectFridgerAndFridgerGroupByFridgerId" parameterType="_int" resultMap="fridger-fridgerGroup-resultmap">
	<include refid="select-join-fridgerGroup-sql"/>
AND		f.fridger_id = #{value}
ORDER BY	g.group_member_id
</select>



<!-- 냉장고 애칭으로 찾기 -->
<select id="selectFridgerByFridgerFullName" parameterType="java.lang.String" resultMap="fridger-resultmap">
	<include refid="select-sql"/>
WHERE fridger_name = #{value}
</select>

<select id="selectFridgerByFridgerName" parameterType="java.lang.String" resultMap="fridger-resultmap">
	<include refid="select-sql"/>
WHERE fridger_name LIKE '%'||#{value}||'%'
</select>


<!-- 페이징 -->
<select id="selectFridgerByFridgerNamePaging" parameterType="java.util.HashMap" resultMap="fridger-resultmap">
SELECT	<include refid="all-column"/>
FROM (	SELECT	rownum rnum, <include refid="all-column"/>
	FROM (	SELECT	<include refid="all-column"/>
			FROM	fridger
			WHERE	fridger_name LIKE '%'||#{value}||'%'
			ORDER BY member_id, fridger_name
	)
	WHERE rownum &lt;=#{endIndex}
) <!-- &lt;->크다 표시! -->
WHERE rnum>=#{startIndex}
</select>



<select id="selectFridgerAndIrdntByFridgerName" parameterType="java.lang.String" resultMap="fridger-myIrdnt-resultmap">
	<include refid="select-join-myIrdnt-sql"/>
AND			f.fridger_name = #{value}
ORDER BY	i.irdnt_name
</select>

<select id="selectFridgerAndFridgerGroupByFridgerName" parameterType="java.lang.String" resultMap="fridger-fridgerGroup-resultmap">
	<include refid="select-join-fridgerGroup-sql"/>
AND			f.fridger_name = #{value}
ORDER BY	g.group_member_id
</select>




<!-- 냉장고 주인으로 찾기 -->
<select id="selectFridgerByOwnerId" parameterType="java.lang.String" resultMap="fridger-resultmap">
	<include refid="select-sql"/>
WHERE	member_id = #{value}
</select>

<!-- 페이징 -->
<select id="selectFridgerByOwnerIdPaging" parameterType="java.util.HashMap" resultMap="fridger-resultmap">
SELECT	<include refid="all-column"/>
FROM (	SELECT	rownum rnum, <include refid="all-column"/>
	FROM (	SELECT	<include refid="all-column"/>
			FROM	fridger
			WHERE	member_id = #{value}
			ORDER BY fridger_name
	)
	WHERE rownum &lt;=#{endIndex}
)
WHERE rnum>=#{startIndex}
</select>

<select id="selectFridgerAndIrdntByOwnerId" parameterType="java.lang.String" resultMap="fridger-myIrdnt-resultmap">
	<include refid="select-join-myIrdnt-sql"/>
AND			f.member_id = #{value}
ORDER BY	i.irdnt_name
</select>

<select id="selectFridgerAndFridgerGroupByOwnerId" parameterType="java.lang.String" resultMap="fridger-fridgerGroup-resultmap">
	<include refid="select-join-fridgerGroup-sql"/>
AND			f.member_id = #{value}
ORDER BY	g.group_member_id
</select>



<!-- 페이징을 위한 카운팅  -->
<select id="selectCountFridgerByOwnerId" parameterType="java.lang.String" resultType="_int">
SELECT	COUNT(*)
FROM	fridger
WHERE	member_id = #{value}
</select>

<select id="selectCountFridgerByFridgerName" parameterType="java.lang.String" resultType="_int">
SELECT	COUNT(*)
FROM	fridger
WHERE	fridger_name LIKE '%'||#{value}||'%'
</select>

</mapper>