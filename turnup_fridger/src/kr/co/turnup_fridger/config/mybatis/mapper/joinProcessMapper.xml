<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="joinProcessMapper">
	
	
	<!-- 공통 SQL -->
	<sql id="select-sql">
		SELECT	process_no,
				process_fridger_id,
				process_state,
				req_date,
				resp_date,
				req_member_id,
				resp_member_id
		FROM	join_process
	</sql>
	
		<sql id="select-join-fridger-sql">
		SELECT	p.process_no,
				p.process_fridger_id,
				p.process_state,
				p.req_date,
				p.resp_date,
				p.req_member_id,
				p.resp_member_id,
				f.fridger_name,
				f.member_id
		FROM	join_process p, fridger f
		WHERE	p.process_fridger_id = f.fridger_id(+)
	</sql>
	
	<!-- result-mapping -->
	<resultMap type="joinProcess" id="joinProcess-resultmap">
		<id column="process_no" property="processNo"/>
		<result column="process_fridger_id" property="processFridgerId"/>
		<result column="process_state" property="processState"/>
		<result column="req_date" property="reqDate"/>
		<result column="resp_date" property="respDate"/>
		<result column="req_member_id" property="reqMemberId"/>
		<result column="resp_member_id" property="respMemberId"/>	
	</resultMap>
	
	
	<resultMap type="joinProcess" id="joinProcess-fridger-resultmap" extends="joinProcess-resultmap">
		<association property="fridger" javaType="kr.co.turnup_fridger.vo.Fridger">
			<result column="fridger_name"  property="fridgerName"/>
			<result column="member_id" property="memberId"/>
		</association>
	</resultMap>

	<!-- insert : 가입신청/초대가 들어오면 삽입됨 -->
	<insert id="insertJoinProcess" parameterType="joinProcess">
		<selectKey order="BEFORE" keyProperty="processNo" resultType="int">
			SELECT	process_no.nextval FROM	dual
		</selectKey>
		INSERT INTO join_process
		VALUES (
			#{processNo},
			#{processFridgerId},
			#{processState},
			#{reqDate},
			#{respDate},
			#{reqMemberId},
			#{respMemberId}
		)
	</insert>
	
	<!-- update : 처리상태 변경 -->
	<!-- 승인완료가 되면 냉장고 그룹으로 insert (서비스단에서!) -->
	<update id="updateJoinProcess" parameterType="joinProcess">
		UPDATE	join_process
		SET		process_state =#{processState},
				resp_date = #{respDate}
		WHERE	process_no = #{processNo}
	</update>
	
	<!-- delete : 번호로 삭제 (동적쿼리) 선택된 갯수가 1개 이상일 때-->
	<delete id="deleteJoinProcessByProcessNo" parameterType="java.util.ArrayList">
		DELETE FROM join_process
		<where>
			<choose>
				<when test="list != null and list.size() > 0">
					process_no IN
					<foreach collection="list" open="(" close=")" separator="," item="processNo">
						#{processNo}
					</foreach>
				</when>
				<otherwise>
				1 = -1
				</otherwise>
			</choose>
		</where>
	</delete>
	
	<!-- delete : 번호로 삭제 (동적쿼리) 선택된 갯수가 1개 이상일 때-->
	<delete id="deleteJoinProcessByFridgerId" parameterType="_int">
		DELETE FROM	join_process
		WHERE		process_fridger_id = #{value}
	</delete>
	
	
	<!-- delete : 승인대기인 것들은 일정 시간안에 진행이 안되면 삭제됨(관리자? spring 스케줄링?) -->
	<!-- DATA_ADD(DATE, interval 기본값)
		날짜에서 interval 값 만큼 더한 값 리턴
		ex) select *
			from [table] 
			where DATE_ADD(DATE_FORMAT(now(), '%Y-%m-%d 00:00'), interval weekday(now()) day);
	 -->
	 <!--  -->
	<delete id="deleteJoinProcessNotProcessedIn14Days">
		DELETE FROM	join_process
		WHERE		resp_date IS NULL
		AND			to_date(sysdate, 'yy-MM-dd') - to_date(req_date,'yy-MM-dd') > 14
	</delete>
	
	
	<!-- delete : 처리완료(승인, 거절)인 것들은 6개월 뒤 삭제됨(관리자? spring 스케줄링?) -->
	<delete id="deleteJoinProcessCompleted6MonthsBefore">
		DELETE FROM	join_process
		WHERE		resp_date IS NOT NULL
		AND			MONTHS_BETWEEN(to_date(sysdate, 'yy-MM-dd'), to_date(resp_date,'yy-MM-dd')) > 6
	</delete>
	
	
	
	<!-- select -->
	<!-- 모든 가입처리 목록 -->
	<select id="selectJoinProcessAll" resultMap="joinProcess-resultmap">
		<include refid="select-sql"/>
		ORDER BY	process_no
	</select>
	
	<!-- 처리번호로 -->
	<select id="selectJoinProcessByProcessNo" parameterType="_int" resultMap="joinProcess-resultmap">
		<include refid="select-sql"/>
		WHERE process_no = #{value}
	</select>
	
	<!-- 특정 냉장고의 가입처리 목록 조회 -->
	<select id="selectJoinProcessByFridgerId" parameterType="_int" resultMap="joinProcess-resultmap">
		<include refid="select-sql"/>
		WHERE		process_fridger_id = #{value}
		ORDER BY	process_no
	</select>
	
	<!-- 특정 냉장고의 요정자와 응답자로 가입처리 목록 조회 -->
	<select id="selectJoinProcessByRequesterAndResponser" parameterType="java.util.HashMap" resultMap="joinProcess-resultmap">
		<include refid="select-sql"/>
		WHERE		req_member_id = #{reqMemberId} AND respMemberId = #{respMemberId}
		ORDER BY	process_no
	</select>
	
	<!-- 처리 상태로 목록 조회 -->
	<select id="selectJoinProcessByProcessState" parameterType="_int" resultMap="joinProcess-resultmap">
		<include refid="select-sql"/>
		WHERE	process_state = #{value}
		ORDER BY	process_no
	</select>
	
	<!-- 신청자로 목록 조회 -->
	<select id="selectJoinProcessByRequestMemberId" parameterType="java.lang.String" resultMap="joinProcess-fridger-resultmap">
		<include refid="select-join-fridger-sql"/>
		AND		p.req_member_id = #{value}
		ORDER BY	p.process_no
	</select>
	
	<!-- 승인자로 목록 조회 -->
	<select id="selectJoinProcessByResponseMemberId" parameterType="java.lang.String" resultMap="joinProcess-fridger-resultmap">
		<include refid="select-join-fridger-sql"/>
		AND		p.resp_member_id = #{value}
		ORDER BY	p.process_no
	</select>
	
	<!-- 신청일로 조회 -->
	<select id="selectJoinProcessByRequestDate" parameterType="java.util.Date" resultMap="joinProcess-resultmap">
		<include refid="select-sql"/>
		WHERE		req_date = #{value}
		ORDER BY	process_no
	</select>
	
	<!-- 승인일로 조회 -->
	<select id="selectJoinProcessByResponseDate" parameterType="java.util.Date" resultMap="joinProcess-resultmap">
		<include refid="select-sql"/>
		WHERE		resp_date = #{value}
		ORDGER BY	process_no
	</select>
	
	
</mapper>