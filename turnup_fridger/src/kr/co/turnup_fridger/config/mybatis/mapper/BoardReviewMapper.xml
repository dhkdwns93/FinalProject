<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.co.turnup_fridger.config.mybatis.mapper.BoardReviewMapper">
	
		<!-- 
			boardReview 테이블 관련 mapper
			+ boardReview 등록
			+ boardReview 수정
			+ boardReview 삭제
			+ boardReview 조회
		 -->
	
	<sql id="recipe-column">
		recipe_id,
		recipe_name,
		sumry,
		category_code,
		category_name,
		type_code,
		type_name,
		cooking_time,
		calorie,
		qnt,
		recipe_level,
		irdnt_code,
		price,
		img_url,
		det_url,
		recipe_hits
	</sql>
	
	
	<sql id="all-column">
		BOARD_REVIEW_ID, BOARD_REVIEW_TITLE, BOARD_REVIEW_TXT, 
		BOARD_REVIEW_DATE, BOARD_REVIEW_IMAGE_NAME, BOARD_REVIEW_IMAGE_SAVE_NAME, BOARD_REVIEW_STAR, RECIPE_NAME, MEMBER_ID, RECIPE_ID
	</sql> 	
	
	
		<!-- boardReview 기본 조회 sql -->
	<sql id="boardReview-select-sql">
		SELECT BOARD_REVIEW_ID, BOARD_REVIEW_TITLE, BOARD_REVIEW_TXT, 
			   BOARD_REVIEW_DATE, BOARD_REVIEW_IMAGE_NAME, BOARD_REVIEW_IMAGE_SAVE_NAME, BOARD_REVIEW_STAR, RECIPE_NAME, MEMBER_ID, RECIPE_ID
		FROM BOARD_REVIEW
	</sql>
	
	
	
	
	<!-- ResultMap 등록 -->
	<resultMap id="boardReview-resultmap" type="boardReview">
		<id column="BOARD_REVIEW_ID" property="boardReviewId"/>
		<result column="BOARD_REVIEW_TITLE" property="boardReviewTitle"/>
		<result column="BOARD_REVIEW_TXT" property="boardReviewTxt"/>
		<result column="BOARD_REVIEW_DATE" property="boardReviewDate"/>
		<result column="BOARD_REVIEW_IMAGE_NAME" property="imageName"/>
		<result column="BOARD_REVIEW_IMAGE_SAVE_NAME" property="imageSaveName"/>
		<result column="BOARD_REVIEW_STAR" property="boardReviewStar"/>
		<result column="RECIPE_NAME" property="recipeName"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="RECIPE_ID" property="recipeId"/>	
	</resultMap>
	
	
	
	<!-- 등록 SQL -->	
	<insert id="insertBoardReview" parameterType="boardReview">
		<selectKey resultType="_int" keyProperty="boardReviewId" order="BEFORE">
			select BOARD_REVIEW_ID.nextval from dual
		</selectKey>
		INSERT INTO BOARD_REVIEW
		VALUES(
				#{boardReviewId},
				#{boardReviewTitle},
				#{boardReviewTxt},
				SYSDATE,
				#{imageName},
				#{imageSaveName},
				#{boardReviewStar},
				#{recipeName},
				#{memberId},
				#{recipeId}
			   )	
	</insert>
	
	<!-- 업데이트 SQL -->
	<update id="updateBoardReview" parameterType="boardReview">
		UPDATE 	BOARD_REVIEW 
		SET		BOARD_REVIEW_TITLE = #{boardReviewTitle},
				BOARD_REVIEW_TXT = #{boardReviewTxt},
				BOARD_REVIEW_DATE = SYSDATE,
				BOARD_REVIEW_IMAGE_NAME = #{imageName},
				BOARD_REVIEW_IMAGE_SAVE_NAME = #{imageSaveName},
				BOARD_REVIEW_STAR = #{boardReviewStar},
				RECIPE_NAME = #{recipeName},
				MEMBER_ID = #{memberId},
				RECIPE_ID = #{recipeId}
		WHERE	BOARD_REVIEW_ID = #{boardReviewId}
	</update>
	
	<!-- 이미지 null로 수정하는 SQL -->
	<update id="updateImageNull" parameterType="boardReview">
		UPDATE 	BOARD_REVIEW 
		SET		BOARD_REVIEW_TITLE = #{boardReviewTitle},
				BOARD_REVIEW_TXT = #{boardReviewTxt},
				BOARD_REVIEW_DATE = SYSDATE,
				BOARD_REVIEW_IMAGE_NAME = null,
				BOARD_REVIEW_IMAGE_SAVE_NAME = null,
				BOARD_REVIEW_STAR = #{boardReviewStar},
				RECIPE_NAME = #{recipeName},
				MEMBER_ID = #{memberId},
				RECIPE_ID = #{recipeId}
		WHERE	BOARD_REVIEW_ID = #{boardReviewId}
	</update>	
	

	<!-- 삭세 SQL-->
	<delete id="deleteBoardReview" parameterType="_int">
		DELETE FROM BOARD_REVIEW WHERE BOARD_REVIEW_ID = #{boardReviewId}
	</delete>
	
	
	<select id="selectRecipeName" resultMap="kr.co.turnup_fridger.config.mybatis.mapper.RecipeInfoMapper.RecipeInfo-resultmap" parameterType="String">
		SELECT
		<include refid="recipe-column"/>
		FROM RECIPE_INFO
		WHERE RECIPE_NAME LIKE '%'||#{value}||'%'
	</select>
	
	
	<!-- BOARD_Review 카운트  -->
	<select id = "selectBoardReviewCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD_REVIEW
	</select>
	

	<!-- LIST 조회하는 SQL-->
	<select id="selectBoardReviewList" resultMap="boardReview-resultmap">
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM( 			
					<include refid="boardReview-select-sql"/>
					 ORDER BY BOARD_REVIEW_DATE DESC
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}		 
	</select>
	
	
	
	<!-- LIST 별점순  조회하는 SQL-->
	<select id="selectBoardReviewByStarList" resultMap="boardReview-resultmap">
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM( 	
					<include refid="boardReview-select-sql"/>
					 ORDER BY BOARD_REVIEW_STAR DESC
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}		 
	</select>		
	
	
	 
	
	

	<!-- BOARD_Review memberId 카운트  -->
	<select id = "selectBoardReviewMemberIdCount" resultType="_int">
		SELECT COUNT(*) 
		FROM BOARD_REVIEW
		WHERE MEMBER_ID LIKE #{memberId}
	</select>
	
	<!-- LIST 아이디 조회하는 SQL-->
	<select id="selectBoardReviewByMemberIdList" parameterType="map" resultMap="boardReview-resultmap">
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM(		
					<include refid="boardReview-select-sql"/>
					 WHERE MEMBER_ID = #{memberId}
					 ORDER BY BOARD_REVIEW_DATE DESC
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}	
	</select>	
	
	
	
	<!-- BOARD_Review 레시피 이름 카운트  -->
	<select id = "selectBoardReviewRecipeNameCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD_REVIEW
		WHERE RECIPE_NAME LIKE '%'||#{recipeName}||'%'
	</select>

	<!-- LIST 레시피 이름  조회하는 SQL-->
	<select id="selectBoardReviewByRecipeNameList" parameterType="map" resultMap="boardReview-resultmap">
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM( 	
					<include refid="boardReview-select-sql"/>
					 WHERE RECIPE_NAME LIKE '%'||#{recipeName}||'%'
					 ORDER BY BOARD_REVIEW_DATE DESC
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}		
	</select>	
	
	<!-- reviewId로 조회하는 SQL-->	
	<select id="selectBoardReviewByBoardReviewId" parameterType="int" resultMap="boardReview-resultmap">
		<include refid="boardReview-select-sql"/>
		 WHERE BOARD_REVIEW_ID = #{boardReviewId}
	</select>	
	
	<!--    //////////////////////////////////////////////////////////////////////////////////////////////   -->	
	
	
	<!-- 리뷰 아이디 카운트  -->
	<select id = "selectRecipeIdCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD_REVIEW
		WHERE RECIPE_ID LIKE #{recipeId}
	</select>
	
	
	<!-- 레시피 아이디로 리스트 조회 SQL -->
	<select id="selectBoardReviewByRecipeId" parameterType="map" resultMap="boardReview-resultmap">
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM(
				<include refid="boardReview-select-sql"/>
				 WHERE RECIPE_ID = #{recipeId}
				 ORDER BY BOARD_REVIEW_DATE DESC
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}	
	</select>	
</mapper>