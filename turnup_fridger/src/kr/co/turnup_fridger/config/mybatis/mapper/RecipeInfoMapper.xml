<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.co.turnup_fridger.config.mybatis.mapper.RecipeInfoMapper">
	
	<sql id="all-column">
		recipe_id,
		recipe_name,
		sumry,
		category_code,
		category_name,
		type_code,
		type_name,
		cooking_time,
		calorie,
		qnt,
		recipe_level,
		irdnt_code,
		price,
		img_url,
		det_url,
		recipe_hits
	</sql>
	
	<resultMap type="RecipeInfo" id="RecipeInfo-resultmap">
		<id column ="recipe_id" property="recipeId"/>
		<result column="recipe_name" property="recipeName"/>
		<result column="sumry" property="sumry"/>
		<result column="category_code" property="categoryCode"/>
		<result column="category_name" property="categoryName"/>
		<result column="type_code" property="typeCode"/>
		<result column="type_name" property="typeName"/>
		<result column="cooking_time" property="cookingTime"/>
		<result column="calorie" property="calorie"/>
		<result column="qnt" property="qnt"/>
		<result column="recipe_level" property="recipeLevel"/>
		<result column="irdnt_code" property="irdntCode"/>
		<result column="price" property="price"/>
		<result column="img_url" property="imgUrl"/>
		<result column="det_url" property="detUrl"/>
		<result column="recipe_hits" property="recipeHits"/>		
	</resultMap>
	
	<resultMap type="RecipeInfo" id="recipeInfo-recipeCrse-recipeIrdnt-resultmap" extends="RecipeInfo-resultmap">
		<collection property="recipeCrseList" ofType="RecipeCrse">
			<result column="cooking_no" property="cookingNo"/>
			<result column="cooking_dc" property="cookingDc"/>
			<result column="step_image_url" property="stepImageUrl"/>
			<result column="step_tip" property="stepTip"/>
		</collection>
		<collection property="recipeIrdntList" ofType="RecipeIrdnt">
			<id column="irdnt_no" property="irdntNo"/>
			<result column="irdnt_name" property="irdntName"/>
			<result column="irdnt_amount" property="irdntAmount"/>
			<result column="irdnt_type_code" property="irdntTypeCode"/>
			<result column="irdnt_type_name" property="irdntTypeName"/>
			<result column="irdnt_id" property="irdntId"/>
		</collection>
	</resultMap>
	
	<insert id="insertRecipeInfo" parameterType="RecipeInfo">
	<selectKey order="BEFORE" keyProperty="recipeId" resultType="int">
				SELECT RECIPE_ID_seq.nextval FROM dual
	</selectKey>
		insert into Recipe_Info
		values (#{recipeId},
				#{recipeName},
				#{sumry},
				#{categoryCode},
				#{categoryName},
				#{typeCode},
				#{typeName},
				#{cookingTime},
				#{calorie},
				#{qnt},
				#{recipeLevel},
				#{irdntCode},
				#{price},
				#{imgUrl},
				#{detUrl},
				#{recipeHits}
				)
	</insert>
	
	<update id="increaseHits" parameterType="_int">
	UPDATE RECIPE_INFO 
	SET recipe_hits = recipe_hits + 1
	WHERE recipe_id = #{value}
	</update>
	
	<!-- id랑 hit빼고 업뎃 -->
	<update id="updateRecipeInfo" parameterType="RecipeInfo">
		update 	Recipe_Info
		set	 	recipe_name=#{recipeName},
				sumry=#{sumry},
				category_code=#{categoryCode},
				category_name=#{categoryName},
				type_code=#{typeCode},
				type_name=#{typeName},
				cooking_time=#{cookingTime},
				qnt=#{qnt},
				calorie=#{calorie},
				recipe_level=#{recipeLevel},
				irdnt_code=#{irdntCode},
				price=#{price},
				img_url=#{imgUrl},
				det_url=#{detUrl}
		where 	recipe_id=#{recipeId}
	</update>
	
	<delete id="deleteRecipeInfo" parameterType="_int">
		delete from Recipe_Info
		where recipe_id=#{recipeId}
	</delete>
	
	<select id="selectAllRecipeInfo" resultMap="RecipeInfo-resultmap">
		SELECT
		<include refid="all-column" />
		FROM Recipe_Info
	</select>
	
	<select id="selectRecipeInfoById" resultMap="RecipeInfo-resultmap" parameterType="_int">
		SELECT
		<include refid="all-column" />
		FROM Recipe_Info
		where recipe_id=#{recipeId}
	</select>

	
	<!--조인  -->
	<select id="selectThreeOfRecipesById" resultMap="recipeInfo-recipeCrse-recipeIrdnt-resultmap" parameterType="_int">
		SELECT	i.recipe_id,i.recipe_name,
				i.sumry,
				i.category_code,
				i.category_name,
				i.type_code,
				i.type_name,
				i.cooking_time,
				i.calorie,
				i.qnt,
				i.recipe_level,
				i.irdnt_code,
				i.price,
				i.img_url,
				i.det_url,
				i.recipe_hits,
				d.irdnt_no, 
				d.irdnt_name, 
				d.irdnt_amount, 
				d.irdnt_type_code, 
				d.irdnt_type_name, 
				d.recipe_id, d.irdnt_id,
				c.cooking_no,
				c.cooking_dc, 
				c.step_image_url, 
				c.step_tip, 
				c.recipe_id
		FROM 	recipe_info i, recipe_crse c, recipe_irdnt d
		WHERE 	i.recipe_id = c.recipe_id(+) and i.recipe_id = d.recipe_id(+)
		AND 	i.recipe_id = #{value}
		ORDER BY i.recipe_id, d.irdnt_id, c.cooking_no
	</select>
	
	
	<!-- (7/9) 카테고리 목록 검색  -->
	<select id="selectRecipeInfoByFullName" parameterType="java.lang.String" resultType="recipeInfo">
		SELECT
		<include refid="all-column" />
		FROM RECIPE_INFO
		WHERE recipe_name=#{recipeName}
	</select>
	
	<!--레시피명으로 조회-->
	<select id="selectRecipeInfoByName" resultMap="RecipeInfo-resultmap" parameterType="java.util.HashMap">
	 SELECT recipe_id,recipe_name,sumry,category_code,category_name,type_code,type_name,cooking_time,
		calorie,qnt,recipe_level,irdnt_code,price,img_url,det_url,recipe_hits
     FROM (			
		SELECT rownum rnum,	recipe_id,recipe_name,sumry,category_code,category_name,type_code,type_name,cooking_time,
		calorie,qnt,recipe_level,irdnt_code,price,img_url,det_url,recipe_hits
			FROM (		
				SELECT <include refid="all-column" />
				FROM Recipe_Info
				where recipe_name like '%'||#{recipeName}||'%'
				<choose>
					<when test="keyword=='recipeHitsDesc'">
						order by recipe_hits desc
					</when>
					<when test="keyword=='recipeHitsAsc'">
						order by recipe_hits asc
					</when>
					<when test="keyword =='calorieDesc'">
					order by calorie desc
					</when>
					<when test="keyword =='calorieAsc'">
						order by calorie asc
					</when>
					<when test="keyword == '초보환영'">
						and recipe_level='초보환영'
					</when>
					<when test="keyword == '보통'">
					and recipe_level='보통'
					</when>
					<when test="keyword == '어려움'">
						and recipe_level='어려움'
					</when>			
				</choose>)
			WHERE rownum &lt;=#{endIndex})
		WHERE rnum>=#{startIndex}
	
	
	</select>
	
	<!--레시피명 카운트  -->
	<select id="selectRecipeInfoByNameCount" resultType="_int" parameterType="java.util.HashMap">
				SELECT count(*)
				FROM Recipe_Info
				where recipe_name like '%'||#{recipeName}||'%'
				<choose>
					<when test="keyword=='recipeHitsDesc'">
						order by recipe_hits desc
					</when>
					<when test="keyword=='recipeHitsAsc'">
						order by recipe_hits asc
					</when>
					<when test="keyword =='calorieDesc'">
					order by calorie desc
					</when>
					<when test="keyword =='calorieAsc'">
						order by calorie asc
					</when>
					<when test="keyword == '초보환영'">
						and recipe_level='초보환영'
					</when>
					<when test="keyword == '보통'">
					and recipe_level='보통'
					</when>
					<when test="keyword == '어려움'">
						and recipe_level='어려움'
					</when>			
				</choose>
	</select>
	
	<!--카테고리  -->
	<select id="selectRecipeInfoByCategoryAndType" resultMap="RecipeInfo-resultmap" parameterType="java.util.HashMap">
	SELECT
	recipe_id,recipe_name,sumry,category_code,category_name,type_code,type_name,cooking_time,
	calorie,qnt,recipe_level,irdnt_code,price,img_url,det_url,recipe_hits
	FROM (
	SELECT rownum
	rnum,recipe_id,recipe_name,sumry,category_code,category_name,type_code,type_name,cooking_time,
	calorie,qnt,recipe_level,irdnt_code,price,img_url,det_url,recipe_hits
	FROM (

	SELECT
	<include refid="all-column" />
	FROM Recipe_Info
	where category_name like '%'||#{categoryName}||'%' and type_name like '%'||#{typeName}||'%'
	<choose>
		<when test="keyword=='recipeHitsDesc'">
			order by recipe_hits desc
		</when>
		<when test="keyword=='recipeHitsAsc'">
			order by recipe_hits asc
		</when>
		<when test="keyword =='calorieDesc'">
			order by calorie desc
		</when>
		<when test="keyword =='calorieAsc'">
			order by calorie asc
		</when>
		<when test="keyword == '초보환영'">
			and recipe_level='초보환영'
		</when>
		<when test="keyword == '보통'">
			and recipe_level='보통'
		</when>
		<when test="keyword == '어려움'">
			and recipe_level='어려움'
		</when>
	</choose>)
	WHERE rownum &lt;=#{endIndex})
	WHERE rnum>=#{startIndex}
	
	</select>
		
	<!--카테고리 카운트  -->
	<select id="selectRecipeInfoByCategoryAndTypeCount" resultType="_int" parameterType="java.util.HashMap">
		SELECT count(*)
		FROM Recipe_Info
		where category_name like '%'||#{categoryName}||'%' and type_name like '%'||#{typeName}||'%'
		<choose>
			<when test="keyword=='recipeHitsDesc'">
				order by recipe_hits desc
			</when>
			<when test="keyword=='recipeHitsAsc'">
				order by recipe_hits asc
			</when>
			<when test="keyword =='calorieDesc'">
				order by calorie desc
			</when>
			<when test="keyword =='calorieAsc'">
				order by calorie asc
			</when>
			<when test="keyword == '초보환영'">
				and recipe_level='초보환영'
			</when>
			<when test="keyword == '보통'">
				and recipe_level='보통'
			</when>
			<when test="keyword == '어려움'">
				and recipe_level='어려움'
			</when>			
		</choose>
	</select>	
		
	<!--recipe_id들로 조회  -->
	<select id="selectRecipesInfoByIds" resultMap="RecipeInfo-resultmap" parameterType="java.util.HashMap">
		SELECT
	recipe_id,recipe_name,sumry,category_code,category_name,type_code,type_name,cooking_time,
	calorie,qnt,recipe_level,irdnt_code,price,img_url,det_url,recipe_hits
	FROM (
	SELECT rownum
	rnum,recipe_id,recipe_name,sumry,category_code,category_name,type_code,type_name,cooking_time,
	calorie,qnt,recipe_level,irdnt_code,price,img_url,det_url,recipe_hits
	FROM (
		
		select
		<include refid="all-column" />
		FROM Recipe_Info
		<where>
			<choose>
				<when test="recipeIds !=null and recipeIds.size()>0 ">
					recipe_id in
					<foreach collection ="recipeIds" open="(" close=")" separator="," item="recipeId" >
						#{recipeId}
					</foreach>
				</when>
				<otherwise>
				1=-1
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="keyword=='recipeHitsDesc'">
				order by recipe_hits desc
			</when>
			<when test="keyword=='recipeHitsAsc'">
				order by recipe_hits asc
			</when>
			<when test="keyword =='calorieDesc'">
				order by calorie desc
			</when>
			<when test="keyword =='calorieAsc'">
				order by calorie asc
			</when>
			<when test="keyword == '초보환영'">
				and recipe_level='초보환영'
			</when>
			<when test="keyword == '보통'">
				and recipe_level='보통'
			</when>
			<when test="keyword == '어려움'">
				and recipe_level='어려움'
			</when>			
		</choose>)
	WHERE rownum &lt;=#{endIndex})
	WHERE rnum>=#{startIndex}
	
	
	</select>
	
	<!--id로 카운트  -->
	<select id="selectRecipesInfoByIdsCount" resultType="_int" parameterType="java.util.HashMap">
		select count(*)
		FROM Recipe_Info
		<where>
			<choose>
				<when test="recipeIds !=null and recipeIds.size()>0 ">
					recipe_id in
					<foreach collection ="recipeIds" open="(" close=")" separator="," item="recipeId" >
						#{recipeId}
					</foreach>
				</when>
				<otherwise>
				1=-1
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="keyword=='recipeHitsDesc'">
				order by recipe_hits desc
			</when>
			<when test="keyword=='recipeHitsAsc'">
				order by recipe_hits asc
			</when>
			<when test="keyword =='calorieDesc'">
				order by calorie desc
			</when>
			<when test="keyword =='calorieAsc'">
				order by calorie asc
			</when>
			<when test="keyword == '초보환영'">
				and recipe_level='초보환영'
			</when>
			<when test="keyword == '보통'">
				and recipe_level='보통'
			</when>
			<when test="keyword == '어려움'">
				and recipe_level='어려움'
			</when>			
		</choose>
	</select>
	
	
	<!-- (7/9) 카테고리 목록 검색  -->
	<select id="selectRecipeCategory" resultType="java.util.ArrayList">
	SELECT DISTINCT category_CODE, category_name 
	FROM RECIPE_INFO 
	ORDER BY category_CODE
	</select>
	
	<select id="selectRecipeType" resultType="java.util.ArrayList">
	SELECT DISTINCT type_CODE, type_name 
	FROM RECIPE_INFO 
	ORDER BY type_CODE
	</select>
	
	<!-- (7/9) 난이도 목록 검색  -->
	<select id="selectRecipeLevel" resultType="java.util.ArrayList">
	SELECT DISTINCT recipe_LEVEL 
	FROM RECIPE_INFO 
	ORDER BY category_CODE
	</select>
	
	<!--카테고리명 받아서 음식분류명 동적으로 가져오기  -->
	<select id="selectTypeNameByCategoryName" parameterType ="java.lang.String" resultType="string">
	SELECT DISTINCT type_name 
	FROM RECIPE_INFO 
	where category_name=#{value}
	</select>
	
	<!--카테고리 코드 받아서 음식분류코드 , 일름 동적으로 가져오기  -->
	<select id="selectTypeCodeAndNameByCategoryCode" parameterType ="_int" resultMap="RecipeInfo-resultmap">
	SELECT DISTINCT type_code, type_name 
	FROM RECIPE_INFO 
	where category_Code=#{value}
	order by type_code
	</select>

	
	
</mapper>