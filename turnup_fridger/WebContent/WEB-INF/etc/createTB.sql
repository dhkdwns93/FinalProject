-- InsertMain에서 API자료 넣은상태로 실행하기!! (재료테이블 데이터입력까지 한번에 처리하도록) 
-- 테이블생성, 기본관리자계정 생성, 재료테이블 데이터입력

-- 전체사용자(권한)
CREATE TABLE AUTHORITY(
	LOGIN_ID VARCHAR2(20) PRIMARY KEY,
	LOGIN_PW VARCHAR2(80) NOT NULL,
	LOGIN_AUTHORITY VARCHAR2(50) NOT NULL
);

-- 회원
CREATE TABLE MEMBER (
   MEMBER_ID VARCHAR2(20) PRIMARY KEY, /* 회원ID */
   MEMBER_PW VARCHAR2(80) NOT NULL, /* 패스워드 */
   MEMBER_NAME VARCHAR2(30) NOT NULL, /* 이름 */
   MEMBER_ADDRESS VARCHAR2(100) NOT NULL, /* 주소 */
   MEMBER_EMAIL VARCHAR2(100) UNIQUE NOT NULL, /* 이메일 */
   MEMBER_TEL VARCHAR2(20) NOT NULL, /* 핸드폰번호 */
   MEMBER_SEX VARCHAR2(10) NOT NULL,/* 성별 */
   CONSTRAINT MEMBER_LOGIN_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES AUTHORITY(LOGIN_ID)
);

-- 관리자
CREATE TABLE ADMIN (
   ADMIN_ID VARCHAR2(20) PRIMARY KEY, /* 관리자 ID */
   ADMIN_PW VARCHAR2(80) NOT NULL, /* 비밀번호 */
   ADMIN_NAME VARCHAR2(30) NOT NULL, /* 이름 */
   ADMIN_TEL VARCHAR2(20) NOT NULL, /* 핸드폰번호 */
   ADMIN_EMAIL VARCHAR2(100) NOT NULL, /* 이메일 */
   ADMIN_AUTHORITY VARCHAR2(50), /* 권한 */
   CONSTRAINT ADMIN_LOGIN_ID_FK FOREIGN KEY(ADMIN_ID) REFERENCES AUTHORITY(LOGIN_ID)
);

-- 메모
CREATE TABLE MY_MEMO (
	MEMO_ID NUMBER PRIMARY KEY, 
   MEMO_NAME VARCHAR2(100) NOT NULL, /* 메모제목 */
   MEMO_TXT VARCHAR2(3000) NOT NULL, /* 메목내용 */
   MEMBER_ID VARCHAR2(20) NOT NULL,    /* 회원ID */
   REGISTERED_DATE DATE NOT NULL,  /* 작성일 */
   CONSTRAINT MY_MEMO_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER
);
CREATE SEQUENCE MEMO_ID INCREMENT BY 1 START WITH 1; 

-- 공지사항
CREATE TABLE BOARD_NOTICE (
   BOARD_NOTICE_ID NUMBER PRIMARY KEY, /* 공지사항 ID */
   BOARE_NOTICE_ITEMS VARCHAR2(30) NOT NULL, /*항목*/
   BOARD_NOTICE_TITLE VARCHAR2(300) NOT NULL, /* 제목 */
   BOARD_NOTICE_TXT VARCHAR2(4000) NOT NULL, /* 내용 */
   BOARD_NOTICE_IMG VARCHAR2(500), /* 사진 */
   BOARD_NOTICE_SAVE_IMG VARCHAR2(500), /* UUID로 생성한 사진 이름*/
   BOARD_NOTICE_DATE DATE DEFAULT SYSDATE NOT NULL /* 작성일 */
); 
CREATE SEQUENCE BOARD_NOTICE_ID INCREMENT BY 1 START WITH 1;  

-- QnA게시판
CREATE TABLE BOARD_QNA (
   BOARD_QNA_ID NUMBER PRIMARY KEY, /* Q&A ID */
   BOARD_QNA_TITLE VARCHAR2(300) NOT NULL, /* 제목 */
   BOARD_QNA_TXT VARCHAR2(3000) NOT NULL, /* 내용 */
   BOARD_QNA_DATE DATE DEFAULT SYSDATE NOT NULL, /* 작성일 */
   COMMENT_COUNT NUMBER, /* 댓글 수 */
   MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   CONSTRAINT BOARD_QNA_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER
);
CREATE SEQUENCE BOARD_QNA_ID INCREMENT BY 1 START WITH 1;  

-- QnA 댓글
CREATE TABLE COMMENT_QNA (
   COMMENT_QNA_ID NUMBER PRIMARY KEY, /* Q&A 댓글 번호 */
   COMMENT_QNA_TXT VARCHAR2(500) NOT NULL, /* Q&A 댓글 내용 */
   COMMENT_QNA_DATE DATE DEFAULT SYSDATE NOT NULL, /* Q&A 댓글 작성일 */
   ADMIN_ID VARCHAR2(20), /* 관리자 ID */
   MEMBER_ID VARCHAR2(20),/* 회원 ID */
   BOARD_QNA_ID NUMBER NOT NULL, /* Q&A ID */
   CONSTRAINT COMMENT_QNA_ADMIN_ID_FK FOREIGN KEY(ADMIN_ID) REFERENCES ADMIN ON DELETE CASCADE,
   CONSTRAINT COMMENT_QNA_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER ON DELETE CASCADE,
   CONSTRAINT COMMENT_QNA_BOARD_QNA_ID_FK FOREIGN KEY(BOARD_QNA_ID) REFERENCES BOARD_QNA ON DELETE CASCADE	
);
CREATE SEQUENCE COMMENT_QNA_ID INCREMENT BY 1 START WITH 1;

-- 자유게시판
CREATE TABLE BOARD_FREE (
   BOARD_FREE_ID NUMBER PRIMARY KEY, /* 자유게시판 ID */
   BOARD_FREE_TITLE VARCHAR2(300) NOT NULL, /* 제목 */
   BOARD_FREE_TXT VARCHAR2(3000) NOT NULL, /* 내용 */
   BOARD_FREE_DATE DATE DEFAULT SYSDATE NOT NULL, /* 작성일 */
   BOARD_FREE_HITS NUMBER NOT NULL, /* 조회수 */
   COMMENT_COUNT NUMBER, /* 댓글 수 */
   MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   CONSTRAINT BOARD_FREE_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER
);
CREATE SEQUENCE BOARD_FREE_ID INCREMENT BY 1 START WITH 1; 

-- 자유게시판 댓글
CREATE TABLE COMMENT_FREE (
   COMMENT_FREE_ID NUMBER PRIMARY KEY, /* 자유게시판 댓글 ID */
   COMMENT_FREE_TXT VARCHAR2(500) NOT NULL, /* 자유게시판 댓글 내용 */
   COMMENT_FREE_DATE DATE DEFAULT SYSDATE NOT NULL, /* 자유게시판 댓글 작성일 */
   BOARD_FREE_ID NUMBER NOT NULL, /* 자유게시판 ID */
   MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   CONSTRAINT COMMENT_FREE_BOARD_FREE_ID_FK FOREIGN KEY(BOARD_FREE_ID) REFERENCES  BOARD_FREE ON DELETE CASCADE,
   CONSTRAINT COMMENT_FREE_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER ON DELETE CASCADE
);
CREATE SEQUENCE COMMENT_FREE_ID INCREMENT BY 1 START WITH 1; 

-- 레시피 공유게시판
CREATE TABLE BOARD_SHARE_RECIPE (
   BOARD_SHARE_RECIPE_ID NUMBER PRIMARY KEY, /* 레시피 공유 ID */
   BOARD_SHARE_RECIPE_TITLE VARCHAR2(100) NOT NULL, /* 제목 */
   BOARD_SHARE_RECIPE_TXT VARCHAR2(3000) NOT NULL, /* 내용 */
   BOARD_SHARE_RECIPE_DATE DATE NOT NULL, /* 작성일 */
   BOARD_SHARE_RECIPE_RECOMMAND NUMBER NOT NULL, /* 추천수 */
   BOARD_SHARE_RECIPE_HITS NUMBER NOT NULL, /* 조회수 */
   BOARD_SHARE_IRDNT_ETC VARCHAR2(500), /* 기타재료 */
   BOARD_SHARE_RECIPE_SAVE_NAME VARCHAR2(100) NOT NULL,/*저장 이름*/
   BOARD_SHARE_RECIPE_ORIGINAL VARCHAR2(100) NOT NULL,/*오리지날 이름*/
   MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   CONSTRAINT BSR_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER
);
CREATE SEQUENCE BOARD_SHARE_RECIPE_ID INCREMENT BY 1 START WITH 1; 

-- 레시피 추천여부
CREATE TABLE MEMBER_RECIPE_RECOMMAND (
   MEMBER_RECIPE_RECOMMAND_KEY NUMBER PRIMARY KEY, /* 회원별공유레시피추천현황 KEY */
   BOARD_SHARE_RECIPE_ID NUMBER NOT NULL, /* 레시피 공유 ID */
   MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   CONSTRAINT MRR_SHARE_RECIPE_ID_FK FOREIGN KEY(BOARD_SHARE_RECIPE_ID) REFERENCES  BOARD_SHARE_RECIPE,
   CONSTRAINT MRR_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER
);
CREATE SEQUENCE MEMBER_RECIPE_RECOMMAND_KEY INCREMENT BY 1 START WITH 1; 

-- 냉장고
CREATE TABLE fridger (
   fridger_ID NUMBER PRIMARY KEY, /* 냉장고ID */
   fridger_NAME VARCHAR2(30) NOT NULL, /* 냉장고애칭 */
   member_id	VARCHAR2(20) NOT NULL,  /* 냉장고 마스터 회원*/
   fridger_img VARCHAR2(300), /*7/7_추가한 컬럼*/
   CONSTRAINT member_id_fk FOREIGN KEY (member_id) REFERENCES member ON DELETE CASCADE
);
CREATE SEQUENCE fridger_ID INCREMENT BY 1 START WITH 1;  

-- 냉장고 가입처리
CREATE TABLE join_process (
	process_no		NUMBER	PRIMARY KEY,	/* 처리번호*/
	process_fridger_id	NUMBER	NOT NULL,	/*처리대상 냉장고 (그룹)*/
	process_state	NUMBER	NOT NULL,	/*처리상태: 10-가입승인대기,11-가입승인완료, 12-가입승인거절,20-초대승인대기,21-초대승인완료, 22-초대승인거절*/
	req_date	DATE	NOT NULL,	/*신청일*/
	resp_date	DATE,				/*승인일*/
	req_member_id	VARCHAR2(20)	NOT NULL,	/*요청회원*/
	resp_member_id	VARCHAR2(20)	NOT NULL,	/*응답회원*/
CONSTRAINT pprocess_fridger_id_fk FOREIGN KEY(process_fridger_id) REFERENCES FRIDGER(fridger_id),
CONSTRAINT req_member_id_fk FOREIGN KEY(req_member_id) REFERENCES MEMBER(member_id),
CONSTRAINT resp_member_id_fk FOREIGN KEY(resp_member_id) REFERENCES MEMBER(member_id)
);
CREATE SEQUENCE process_no INCREMENT BY 1 START WITH 1;

-- 냉장고 공유멤버
CREATE TABLE fridger_GROUP (
   GROUP_KEY NUMBER PRIMARY KEY, /* 공유멤버KEY */
   GROUP_JOIN_SEQ NUMBER NOT NULL, /* 그룹가입순서 */
   GROUP_MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   FRIDGER_ID NUMBER, /* 냉장고ID */
   CONSTRAINT fridger_GROUP_MEMBER_ID_FK FOREIGN KEY(group_MEMBER_ID) REFERENCES MEMBER(member_id),
   CONSTRAINT fridger_GROUP_fridger_ID_FK FOREIGN KEY(fridger_ID) REFERENCES fridger
);
CREATE SEQUENCE GROUP_KEY INCREMENT BY 1 START WITH 1;

-- 쇼핑몰
CREATE TABLE SHOP (
   SHOP_ID NUMBER PRIMARY KEY, /* 쇼핑몰 번호 */
   SHOP_NAME VARCHAR2(200) NOT NULL, /* 쇼핑몰 이름 */
   SHOP_ADDRESS VARCHAR2(1000) NOT NULL, /* 쇼핑몰 주소 */
   SHOP_IMG VARCHAR2(500), /* 사진 */
   SAVE_IMG VARCHAR2(500)
   );
CREATE SEQUENCE SHOP_ID INCREMENT BY 1 START WITH 1;

-- 재료관리
CREATE TABLE IRDNT_MANAGE (
   IRDNT_ID NUMBER PRIMARY KEY, /* 재료ID */
   IRDNT_name VARCHAR2(280) NOT NULL, /* 재료명 */
   IRDNT_CATEGORY VARCHAR2(20), /* 재료분류 */
   ROOM_TEM_PERIOD NUMBER, /*상온보관기간*/
   COLD_TEM_PERIOD NUMBER, /*냉장보관기간*/
   FREEZE_TEM_PERIOD NUMBER, /*냉동보관기간*/
   NOTE VARCHAR2(50)
);
CREATE SEQUENCE IRDNT_ID INCREMENT BY 1 START WITH 1000;

-- 나의 식재료
CREATE TABLE MY_IRDNT (
   MY_IRDNT_KEY NUMBER PRIMARY KEY, /* 나의식재료KEY */
   START_DATE DATE NOT NULL, /* 보관시작일 */
   END_DATE DATE, /* 유통기한 */
   FRESH_LEVEL varchar2(20) NOT NULL, /* 신선도 */
   IRDNT_COUNT VARCHAR2(3000), /* 수량메모 */
   IRDNT_ID NUMBER NOT NULL, /* 재료ID */ 
   IRDNT_NAME VARCHAR2(280) NOT NULL,
   fridger_ID NUMBER NOT NULL, /* 냉장고ID */
   START_FRESH_LEVEL VARCHAR2(30) NOT NULL,
   STORGE_PLACE VARCHAR2(30) NOT NULL,
   CONSTRAINT MY_IRDNT_IRDNT_ID_FK FOREIGN KEY(IRDNT_ID) REFERENCES IRDNT_MANAGE on delete cascade,
   CONSTRAINT MY_IRDNT_fridger_ID_FK FOREIGN KEY(fridger_ID) REFERENCES fridger
);
CREATE SEQUENCE MY_IRDNT_KEY INCREMENT BY 1 START WITH 1; 

-- 공유레시피 재료
CREATE TABLE SHARE_RECIPE_IRDNT (
   SHARE_RECIPE_IRDNT_KEY NUMBER PRIMARY KEY, /* 공유레시피재료KEY */
   BOARD_SHARE_RECIPE_ID NUMBER NOT NULL, /* 레시피 공유 ID */
   IRDNT_ID NUMBER NOT NULL, /* 재료ID */
   CONSTRAINT SEI_BOARD_SHARE_RECIPE_ID_FK FOREIGN KEY(BOARD_SHARE_RECIPE_ID) REFERENCES  BOARD_SHARE_RECIPE,
   CONSTRAINT SRI_IRDNT_ID_FK FOREIGN KEY(IRDNT_ID) REFERENCES IRDNT_MANAGE on delete cascade
);
CREATE SEQUENCE SHARE_RECIPE_IRDNT_KEY INCREMENT BY 1 START WITH 1; 

-- 기피재료
CREATE TABLE MY_DISLIKE_IRDNT (
   MY_DISLIKE_IRDNT_KEY NUMBER PRIMARY KEY, /* 기피재료KEY */
   MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   IRDNT_ID NUMBER NOT NULL, /* 재료ID */
   /*IRDNT_NAME VARCHAR2(50)*/ /*재료명*/
   CONSTRAINT MY_DISLIKE_IRDNT_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) on delete cascade,
   CONSTRAINT MY_DISLIKE_IRDNT_IRDNT_ID_FK FOREIGN KEY(IRDNT_ID) REFERENCES IRDNT_MANAGE(IRDNT_ID) on delete cascade
);
CREATE SEQUENCE MY_DISLIKE_IRDNT_KEY INCREMENT BY 1 START WITH 1;

-- 레시피 기본정보
CREATE TABLE RECIPE_INFO (
   RECIPE_ID NUMBER PRIMARY KEY, /* 레시피 코드 */
   RECIPE_name VARCHAR2(50) NOT NULL, /* 레시피 이름 */
   SUMRY VARCHAR2(400) NOT NULL, /* 간략(요약) 소개 */
   category_CODE NUMBER NOT NULL, /* 유형코드 */
   category_name VARCHAR2(50) NOT NULL, /* 유형분류 */
   type_CODE NUMBER NOT NULL, /* 음식분류코드 */
   type_name VARCHAR2(50) NOT NULL, /* 음식분류 */
   COOKING_TIME VARCHAR2(50) NOT NULL, /* 조리시간 */
   CALORIE VARCHAR2(20) NOT NULL, /* 칼로리 */
   QNT VARCHAR2(20) NOT NULL, /* 분량 */
   recipe_LEVEL VARCHAR2(20) NOT NULL, /* 난이도 */
   IRDNT_CODE VARCHAR2(50), /* 재료별 분류명 */
   price VARCHAR2(20), /* 가격별 분류 */
   IMG_URL VARCHAR2(300) NOT NULL, /* 대표이미지 URL */
   DET_URL VARCHAR2(300) NOT NULL, /* 상세 URL */
   RECIPE_HITS NUMBER NOT NULL /* 조회수 */
);
CREATE SEQUENCE RECIPE_ID_seq INCREMENT BY 1 START WITH 200000;  

-- 레시피 재료정보
CREATE TABLE RECIPE_IRDNT (
   IRDNT_no NUMBER PRIMARY KEY, /* 재료순번 */
   IRDNT_name VARCHAR2(280) NOT NULL, /* 재료명 */
   IRDNT_amount VARCHAR2(280), /* 재료용량 */
   IRDNT_type_CODE NUMBER NOT NULL, /* 재료타입 코드 */
   IRDNT_type_name VARCHAR2(280) NOT NULL, /* 재료타입명 */
   RECIPE_ID NUMBER, /* 레시피 코드 */
   IRDNT_ID NUMBER, /* 재료ID */
   CONSTRAINT VTRI_RECIPE_ID_FK FOREIGN KEY(RECIPE_ID) REFERENCES RECIPE_INFO on delete cascade,
   CONSTRAINT VTRI_IRDNT_ID_FK FOREIGN KEY(IRDNT_ID) REFERENCES IRDNT_MANAGE on delete cascade
);
CREATE SEQUENCE IRDNT_NO_seq INCREMENT BY 1 START WITH 7000;  

-- 레시피 과정정보
CREATE TABLE RECIPE_CRSE (
   RECIPE_ID NUMBER, /* 레시피 코드 */
   COOKING_NO NUMBER, /* 요리설명순서 */
   COOKING_DC VARCHAR2(400) NOT NULL, /* 요리설명 */
   STEP_IMAGE_URL VARCHAR2(300), /* 과정 이미지 URL */
   STEP_TIP VARCHAR2(400), /* 과정팁 */
   PRIMARY KEY(recipe_id, cooking_no),
   CONSTRAINT VTRC_RECIPE_ID_FK FOREIGN KEY(RECIPE_ID) REFERENCES RECIPE_INFO on delete cascade
);

-- 즐겨찾기
CREATE TABLE FAVORITE_RECIPE (
   FAVORITE_RECIPE_KEY NUMBER PRIMARY KEY, /* 즐겨찾기 번호 */
   MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   RECIPE_ID NUMBER NOT NULL, /* 레시피 코드 */
   CONSTRAINT FAVORITE_RECIPE_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER,
   CONSTRAINT FAVORITE_RECIPE_RECIPE_ID_FK FOREIGN KEY(RECIPE_ID) REFERENCES RECIPE_INFO
);
CREATE SEQUENCE FAVORITE_RECIPE_KEY INCREMENT BY 1 START WITH 1; 

-- 후기 게시판
CREATE TABLE BOARD_REVIEW(
   BOARD_REVIEW_ID NUMBER PRIMARY KEY, /* 후기 게시판 ID */
   BOARD_REVIEW_TITLE VARCHAR2(300) NOT NULL, /* 제목 */
   BOARD_REVIEW_TXT VARCHAR2(3000) NOT NULL, /* 내용 */
   BOARD_REVIEW_DATE DATE DEFAULT SYSDATE NOT NULL, /* 작성일 */
   BOARD_REVIEW_IMAGE_NAME VARCHAR2(500), /* 원본이미지 이름 */
   BOARD_REVIEW_IMAGE_SAVE_NAME VARCHAR2(500), /* 저장 이미지 이름 */
   BOARD_REVIEW_STAR NUMBER NOT NULL,/* 별점 */
   RECIPE_NAME VARCHAR2(50) NOT NULL,/* 레시피 이름 */
   MEMBER_ID VARCHAR2(20) NOT NULL, /* 회원ID */
   RECIPE_ID NUMBER NOT NULL,/* 기본 레시피ID */
   CONSTRAINT REVIEW_MEMBER_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER ON DELETE CASCADE,
   CONSTRAINT REVIEW_RECIPE_ID_FK FOREIGN KEY(RECIPE_ID) REFERENCES RECIPE_INFO ON DELETE CASCADE
);
CREATE SEQUENCE BOARD_REVIEW_ID INCREMENT BY 1 START WITH 1; 


-- 레시피 재료 임시테이블
CREATE TABLE RECIPE_IRDNT_TEMP (
   IRDNT_NO NUMBER PRIMARY KEY, /* 재료순번 */
   IRDNT_NAME VARCHAR2(280) NOT NULL, /* 재료명 */
   IRDNT_AMOUNT VARCHAR2(280), /* 재료용량 */
   IRDNT_TYPE_CODE NUMBER NOT NULL, /* 재료타입 코드 */
   IRDNT_TYPE_NAME VARCHAR2(280) NOT NULL, /* 재료타입명 */
   RECIPE_ID NUMBER, /* 레시피 코드 */
   IRDNT_ID NUMBER /* 재료ID */
);

-- 임시테이블에서 레시피재료 테이블로 데이터 이동
INSERT INTO		RECIPE_IRDNT
SELECT 			i.IRDNT_NO, i.IRDNT_NAME, i.IRDNT_AMOUNT, i.IRDNT_TYPE_CODE, i.IRDNT_TYPE_NAME, i.RECIPE_ID,
					m.IRDNT_ID
FROM				RECIPE_IRDNT_TEMP i, IRDNT_MANAGE m
WHERE			m.IRDNT_NAME = i.IRDNT_NAME; 


-- 기본 관리자 등록
INSERT INTO authority VALUES('headAdmin1','headAdmin1','ROLE_HEADMASTERADMIN');
INSERT INTO admin VALUES('headAdmin1','headAdmin1','HeadMasterAdmin','01012345678','headadmin@kosta.or.kr','ROLE_HEADMASTERADMIN');
